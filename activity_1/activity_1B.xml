<!-- 

 ################################################################################
 #                                                                              #
 #                             ACTIVITY 1B - VERSION 1.0                        #
 #                                                                              #
 #               (EMBED THIS FILE'S CONTENT IN THE PDF FINAL MEMORY)            #
 #                                                                              #
 ################################################################################

-->

<?xml version = "1.0" encoding = "ISO-8859-1" ?>

<!-- see comments section [1] -->
<xsd:schema>

<!-- ######################  definition of simple elements ###################### -->

<xs:element name="idRegion" type="xs:integer"/> <!-- see comments section [2.] -->
<xs:element name="descripton" type="xs:string"/> <!-- see comments section [2.] -->
<xs:element name="hospitalised" type="xs:integer"/> <!-- see comments section [2.4.1] -->
<xs:element name="ICU" type="xs:integer"/> <!-- see comments section [2.4.2] -->
<xsd:element name="gender"> <!-- see comments section [2.4.3] -->
	<xsd:simpleType> 
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="female" />
			<xsd:enumeration value="male" />
			<xsd:enumeration value="other" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:element>

<!-- ######################    definition of attributes    ###################### -->

<xs:attribute name="id" type="xs:integer"/> <!-- see comments section [2.1.2] -->

<!-- ###################### definition of complex elements ###################### -->

<xsd:element name="date"> <!-- see comments section [2.2] -->
	<xsd:complexType>
		<xsd:sequence>
			<!-- TO-DO -->
		</xsd:sequence>
	</xsd:complexType>
</xsd:element>

<xsd:element name="region"> <!-- see comments section [2.3] -->
	<xsd:complexType>
		<xsd:sequence>
			<!-- TO-DO -->
		</xsd:sequence>
	</xsd:complexType>
</xsd:element>

<xsd:element name="patients"> <!-- see comments section [2.4] -->
	<xsd:complexType>
		<xsd:sequence>
			<!-- TO-DO -->
		</xsd:sequence>
	</xsd:complexType>
</xsd:element>

<!-- ######################          root element          ###################### -->

<xs:element name="COVID"> <!-- see comments section [2.1.1] -->
  <xs:complexType>
    <xs:sequence>
      <xs:element ref="date"/>
      <xs:element ref="region"/>
      <xs:element ref="patients" maxOccurs="10"/>
    </xs:sequence>
    <xs:attribute ref="id" use="required"/> <!-- see comments section [2.1.2] ---- FALTA 1-9999!!! --> 	
  </xs:complexType>
</xs:element>

</xs:schema>

<!-- 

 ################################################################################
 #                                                                              #
 #                                 COMMENTS SECTION                             #
 #                                                                              #
 ################################################################################

[1] -> The activity statement doesn't give any information about namespaces 
(xmlns), hence we neither include any reference to it in the schema root element 
declaration, nor to the "targetNamespace" attribute (the XML Schema will be 
assigned to the NULL namespace).

[2] -> NOTES ABOUT ELEMENTS & ATTRIBUTES DEFINITIONS:

  [2.1] -> NODE "COVID":  

	[2.1.1] -> The "COVID" node will be the root element of this xml schema. 
               On the other hand, we'll be considering that its subelements will 
               be appearing in the same order on the instance xml documents. 
               Therefore, will have to use the primitive "sequence" in the "COVID" 
               element definition.

    [2.1.2] -> ATTRIBUTE "id": since this is a key field, it must be declared as 
               a mandatory attribute. To do so, we have to explicitly declare it 
               with the "use" attribute, as well as the "required" attribute 
               (references: module 2, page 49). On the other hand, this attribute
               needs to be restricted to values in between 1-9999, thus we also 
               might have to declare this integer attribute as a simpleType and then
               apply a "range" restriction to its values by means of the "minInclusive" 
               & "maxInclusive" attributes (references: module 2, page 52). 
               More information about attributes implementation -> https://www.w3schools.com/xml/schema_simple_attributes.asp

  [2.2] -> NODE "date": Must be a complex type defined as a SEQUENCE (references: 
           module 2 page 48). 

    [2.2.1] -> ELEMENTS "day", "month" & "year": we could define these as "simpleType" 
               elements along with the "restriction" subelement in order to validate that 
               these three elements contain an Integer value (and nothing else).

  [2.3] -> NODE "region": The activity statement does not stablish any constraint
           about this element, hence we can simply declare it as a complexType with no 
           constraints at all.

    [2.3.1] -> ELEMENT "idRegion": "integer" built-in simple type (references: page 50, module 2)

    [2.3.2] -> ELEMENT "description": "string" built-in simple type (references: page 50, module 2)

  [2.4] -> NODE "patients": Since this node can only be repeated as much as 10 
           times, we must stablish the cardinality of this complexType element by means 
           of the minOccurs and maxOccurs attributes (references: module 2, page 49).

    [2.4.1] -> ELEMENT "hospitalised": "integer" built-in simple type (references: page 50, module 2)

    [2.4.2] -> ELEMENT "ICU": "integer" built-in simple type (references: page 50, module 2)

    [2.4.3] -> ELEMENT "gender": Must be a simple Type derived from an NTOKEN existing 
               built-in type, and it has to be defined as an ENUMERATION (references: 
               module 2 page 48)
  
-->